import brotli

decompressor = brotli.Decompressor()

# arrives immediately
chunk1 = bytes.fromhex(
    "85 54 00 00 C0 FF E5 D8 EE 32 3E 1C BF A0 81 43 B7 84 45 44 A1 20 18 34 FC FF 39 0E B3 3C BA AE B0 A2 41 2C 8D EC 8A 6B D6 DC 30 2E C7 26 56 D9 69 7D EB 76 D9 F3 5C 96 5D D3 6E EF 20 66 F4 A3 0F D7 69 88 20 58 DB 56 87 BD B5 9B 59 F0 77 FE 2B 30 82 57 14 90 E0 33 B8 A9 1F 05 46 F0 F6 0F 27 58 40 8C D2 79 51 42 5A 17 20 66 25 46 5A AF 40 F1 17 82 AA AA 26"
)
chunk2 = bytes.fromhex(

)

# arrives after 2 seconds
chunk3 = bytes.fromhex(

)
chunk4 = bytes.fromhex("0D")

chunks = [chunk1, chunk2, chunk3, chunk4]
decompressed_data = b""

# Let's try to decompress subsets of the data.
for i in range(0, len(chunks)):
    try:
        # Get the subset of the data.
        chunk = chunks[i]

        # Try to decompress the subset.
        decompressed_data = decompressor.process(chunk)

        # If we reach this line without an error, the decompression was successful.
        print("\n\nDecompressed data:", decompressed_data)

    except brotli.error:
        # If decompression failed, just pass and try the next chunk even though they will probably all fail.
        print("\n\nError decompressing data with chunks up to:", i + 1)

if decompressor.is_finished():
    print("\n\nAll data decompressed.")
else:
    print("\n\n!! Decompression not finished. but it should be !!")
