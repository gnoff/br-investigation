import zlib

decompressor = zlib.decompressobj(wbits=31)  # 31 is magic number for gzip

# Arrives initially
chunk1 = bytes.fromhex("1F 8B 08 00 00 00 00 00 00 03 00 00 00 FF FF")
chunk2 = bytes.fromhex(
    "32 B0 8A 56 2A 31 73 D6 4D 75 37 CF 4C 2F 30 08 33 C8 CD 72 4B CB 4C 0F 4E 55 D2 89 8E 56 4A CE C8 CC 49 29 4A CD 53 D2 51 8A 8F 0F 70 74 77 8D 8F B7 AF 8E 51 2A 4F CC 2C 89 51 B2 8A 51 CA CF 8B 51 D2 89 51 2A 4E 4D 2C 4A CE 00 8B 14 64 66 27 C6 28 D5 2A E9 44 93 AC A3 BA 36 56 47 49 C5 C7 10 64 73 AC 4E B4 92 8A 8F 91 92 4E 5E 69 4E 4E 2C 08 70 01 00 00 00 FF FF"
)
chunk3 = bytes.fromhex(

)

# Arrives 2 seconds later
chunk4 = bytes.fromhex(

)

chunks = [chunk1, chunk2, chunk3, chunk4]
decompressed_data = b""

# Let's try to decompress subsets of the data.
for i in range(0, len(chunks)):
    try:
        # Get the subset of the data.
        chunk = chunks[i]

        # Try to decompress the subset.
        decompressed_data = decompressor.decompress(chunk)

        if i == len(chunks) - 1:
            decompressed_data = decompressed_data + decompressor.flush()

        # If we reach this line without an error, the decompression was successful.
        print("\n\nDecompressed data:", i, decompressed_data)

    except zlib.error:
        # If decompression failed, just pass and try the next subset.
        print("\n\nError decompressing data with chunks up to:", i + 1)


try:
    decompressed_data = decompressor.flush()
    if len(decompressed_data) > 0:
        print("\n\nDecompressed data:", decompressed_data)
except zlib.error:
    pass
